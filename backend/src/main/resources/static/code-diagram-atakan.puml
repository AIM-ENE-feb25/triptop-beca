@startuml

title Triptop Class Diagram

class EatsController {
  - EatsService eatsService
  + getAllRestaurants(): List<Restaurant>
  + getAndSaveAPIResults(RestaurantDTO): RestaurantResponse
}

interface EatsService {
  + findAllRestaurants(): List<Restaurant>
  + retrieveData(String, String): RestaurantResponse
}

class EatsServiceImpl {
  - List<RetrieveDataStrategy> strategies
  - EatsRepository repository
  + findAllRestaurants(): List<Restaurant>
  + retrieveData(String, String): RestaurantResponse
}

interface RetrieveDataStrategy {
  + retrieveData(String, String): RestaurantResponse
}
class RetrieveFromAPIStrategy {
  - EatsAdapter eatsAdapter
  - EatsRepository eatsRepository
  + retrieveData(String, String): RestaurantResponse
}
class RetrieveFromCacheStrategy {
  - EatsRepository eatsRepository
  + retrieveData(String, String): RestaurantResponse
}

interface EatsAdapter {
  + getRestaurantsNearUser(String, String): JSONObject
}
class EatsAdapterImpl {
  - String apiKey
  + getRestaurantsNearUser(String, String): JSONObject
}

interface EatsRepository <<Repository>> {
  + findAll(): List<Restaurant>
}

class RestaurantNotFoundException

class APIStrategyFailureException

EatsController --> EatsService
EatsServiceImpl ..up|> EatsService
EatsServiceImpl --> RetrieveDataStrategy
RetrieveFromAPIStrategy ..up|> RetrieveDataStrategy
RetrieveFromCacheStrategy ..up|> RetrieveDataStrategy
RetrieveFromAPIStrategy --> EatsAdapter
RetrieveFromAPIStrategy --> EatsRepository
RetrieveFromCacheStrategy --> EatsRepository
EatsAdapterImpl ..up|> EatsAdapter
EatsServiceImpl --> EatsRepository

RetrieveFromAPIStrategy ..> RestaurantNotFoundException
RetrieveFromAPIStrategy ..> APIStrategyFailureException
RetrieveFromCacheStrategy ..> RestaurantNotFoundException

@enduml