@startuml
actor Reiziger
participant ReservationController
participant BookingService
participant BookingAdapter
participant ExternalAPI
participant BookingVolgorde
participant HotelBookingState
participant FlightBookingState
participant CarBookingState

Reiziger -> ReservationController: 1. bookTrip(request: BookingRequest)
ReservationController -> BookingService: 2. bookTrip(request: BookingRequest)

BookingService -> BookingAdapter: 3. fetchAllBookingData(request: BookingRequest)
BookingAdapter -> ExternalAPI: 4. requestAllData (availability, hotel, flight, car)
ExternalAPI --> BookingAdapter: 5. returnAllData(responseData)

BookingAdapter -> HotelBookingState: 6. setHotelData(responseData)
BookingAdapter -> FlightBookingState: 7. setFlightData(responseData)
BookingAdapter -> CarBookingState: 8. setCarData(responseData)

BookingService -> BookingVolgorde: 9. processBooking(request: BookingRequest)

BookingVolgorde -> HotelBookingState: 10. handleRequest(context: BookingVolgorde, request: BookingRequest)
BookingVolgorde -> FlightBookingState: 11. handleRequest(context: BookingVolgorde, request: BookingRequest)
BookingVolgorde -> CarBookingState: 12. handleRequest(context: BookingVolgorde, request: BookingRequest)

BookingVolgorde --> BookingService: 13. BookingResponse
BookingService --> ReservationController: 14. return BookingResponse
ReservationController --> Reiziger: 15. return BookingResponse
@enduml
