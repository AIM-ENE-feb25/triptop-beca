@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Component Diagram voor Triptop (met API Gateway en Redis als Cache)

Container(tt_app, "Triptop Applicatie", "React, Vite", "De website waar de reiziger zijn reis kan samenstellen en hulp kan vragen aan de reisagenten.")
System_Ext(eats_api, "UberEats API", "Externe bron voor restaurantgegevens.")
ContainerDb(redis, "Redis Cache", "NoSQL Redis", "Tijdelijke opslag voor restaurantdata.")

Container_Boundary(api, "Triptop Backend") {
    Component(controller, "EatsController", "SpringBoot MVC RestController", "Verwerkt API-aanvragen en roept service methodes aan.")
    Component(facade, "EatsFacade", "Facade", "Bevat de logica voor het afhandelen van requests en interactie met de EatsService.")
    Component(service, "EatsService", "SpringBoot Service Bean", "Bevat de businesslogica voor manipuleren van de Uber Eats API.")
    Component(eats_client, "EatsAdapter", "SpringBoot Component", "Maakt connectie met Uber Eats API en geeft data door het systeem.")
    Component(eats_cache, "EatsRepository", "Spring Data Redis", "Beheert caching van restaurantdata.")

    Rel(tt_app, controller, "Stuurt verzoek naar", "JSON / HTTPS")
    Rel(controller, facade, "Maakt gebruik van")
    Rel(facade, service, "Maakt gebruik van")
    Rel(service, eats_client, "Maakt gebruik van")
    Rel(eats_client, eats_api, "Krijgt data van", "JSON / HTTPS")

    Rel(service, eats_cache, "Leest en schrijft data naar", "Spring Cache / Redis")
    Rel(eats_cache, redis, "Opslag en ophalen van cache", "In-memory / Key-Value")

}


@enduml
