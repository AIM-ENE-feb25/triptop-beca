@startuml

title Triptop Component Class Diagram (met Redis Cache)

class EatsController {
  - EatsFacade eatsFacade
  + processRestaurantRequest(details)
  + sendResultToApiGateway()
}

class EatsFacade {
  - EatsService eatsService
  + handleRequest(data)
  + manageFallbackLogic()
}

class EatsService {
  - EatsRepository eatsRepository
  - EatsAdapter eatsAdapter
  + fetchRestaurantData()
  + processRestaurantInformation()
  + checkCacheBeforeFetching()
  + handleFallbackScenario()
}

class EatsRepository {
  - RedisClient redisClient
  + storeInCache(data)
  + retrieveFromCache()
  + checkCacheAvailability()
}

class EatsAdapter {
  + fetchRestaurantData()
  + sendRequest()
  + receiveResponse()
}

class EatsFallbackException {
}

EatsController --> EatsFacade : gebruikt
EatsFacade --> EatsService : gebruikt
EatsFacade --> EatsFallbackException : gebruikt
EatsService --> EatsRepository : gebruikt
EatsService --> EatsAdapter : werkt met

note right of EatsFacade
 Regelt request logica en
 mogelijke fallbacks
end note

note right of EatsService
  Businesslogica om
  systeem werkend te houden
end note

note right of EatsRepository
 Beheert caching met Redis
end note

@enduml
