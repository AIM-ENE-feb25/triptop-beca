@startuml

title Triptop Component Class Diagram

interface EatsServicePort {
  + fetchRestaurantData()
  + processRestaurantInformation()
  + checkCacheBeforeFetching()
  + handleFallbackScenario()
}

interface EatsAdapterPort {
  + fetchRestaurantData()
  + sendRequest()
  + receiveResponse()
}

class EatsService implements EatsServicePort {
  - EatsRepositoryPort eatsRepository
  - EatsAdapter eatsAdapter
  + fetchRestaurantData()
  + processRestaurantInformation()
  + checkCacheBeforeFetching()
  + handleFallbackScenario()
}

interface EatsRepositoryPort {
  + storeInCache(data)
  + retrieveFromCache()
  + checkCacheAvailability()
}

class EatsRepository implements EatsRepositoryPort {
  - RedisClient redisClient
  + storeInCache(data)
  + retrieveFromCache()
  + checkCacheAvailability()
}

class EatsAdapter implements EatsAdapterPort {
  + fetchRestaurantData()
  + sendRequest()
  + receiveResponse()
}

class EatsController {
  - EatsServicePort eatsService
  + processRestaurantRequest(details)
  + sendResultToApiGateway()
}

Exception EatsFallbackException {
}

EatsController --> EatsServicePort
EatsService --> EatsRepositoryPort
EatsService --> EatsAdapterPort
EatsService --> EatsFallbackException

note right of EatsServicePort
  Interface voor businesslogica
end note

note right of EatsRepositoryPort
  Interface voor caching-implementatie
end note

note right of EatsRepository
  Implementatie met Redis
end note

@enduml
