@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Dynamic Component Diagram voor Triptop (met API Gateway)

Container(tt_app, "Triptop Applicatie", "React, Vite", "De website waar de reiziger zijn reis kan samenstellen en hulp kan vragen aan de reisagenten.")
System_Ext(eats_api, "UberEats API", "Externe bron voor restaurantgegevens.")
ContainerDb(redis, "Redis Cache", "NoSQL Redis", "Tijdelijke opslag voor restaurantdata.")

Container_Boundary(api, "Triptop Backend") {
    Component(controller, "EatsController", "SpringBoot MVC RestController", "Verwerkt API-aanvragen en roept service methodes aan.")
    Component(facade, "EatsFacade", "Facade", "Bevat de logica voor het afhandelen van requests die fout kunnen gaan met fallback en interactie met de EatsService.")
    Component(service, "EatsService", "SpringBoot Service Bean", "Bevat de businesslogica voor manipuleren van de Uber Eats API.")
    Component(cache, "EatsRepository", "Spring Data Redis", "Cache voor het tijdelijk opslaan van restaurantdata voor fallback.")

    Rel(tt_app, controller, "1. Stuurt verzoek naar", "JSON / HTTPS")
    Rel(controller, facade, "2. Stuurt restaurant data naar", "REST")
    Rel(facade, service, "3. Vraagt restaurant data op via", "REST")
    Rel(service, cache, "4. Controleert beschikbaarheid in cache", "JSON / Redis")
    Rel(cache, redis, "5. Leest en schrijft data naar", "NoSQL")
    Rel(service, eats_api, "6. Haalt restaurant data op via", "JSON / HTTPS")

    Rel(service, facade, "7. Stuurt resultaat op naar", "REST")
    Rel(facade, controller, "8. Stuurt resultaat op naar", "REST")
    Rel(controller, tt_app, "9. Stuurt resultaat op naar", "JSON / HTTPS")
}


@enduml